name: Run unit tests
on: [push]

jobs:
  docker_base_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run unit tests
        run: docker build . --file docker/unittest.dockerfile --tag unittest
        env:
          ENABLE_SLOW_TESTS: True

  ubuntu_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up R 4.4.2
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.4.2'
        
    - name: Install R system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y r-base-dev libcurl4-openssl-dev libssl-dev libxml2-dev libgit2-dev libmagick++-dev
    - name: Setup R packages with renv
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        R_REMOTES_NO_ERRORS_FROM_WARNINGS: "true"
      run: Rscript setup_docker_compatible_renv.R
    - name: Copy renv packages to global library
      run: |
        R --slave -e "
        renv_lib <- renv::paths\$library()
        global_lib <- R.home('library')
        packages <- list.dirs(renv_lib, full.names = FALSE, recursive = FALSE)
        packages <- packages[packages != '']
        cat('Copying', length(packages), 'packages...\n')
        for (pkg in packages) {
          system(paste('cp -rf', shQuote(file.path(renv_lib, pkg)), shQuote(global_lib)))
        }
        "
    - name: Verify essential packages
      run: |
        R --slave -e "
        essential <- c('BiocManager', 'rjson', 'GSVA', 'dpGMM', 'AUCell')
        missing <- essential[!sapply(essential, require, quietly=TRUE, character.only=TRUE)]
        if (length(missing) > 0) { cat('Missing:', paste(missing, collapse=', '), '\n'); quit(status=1) }
        cat('âœ“ All packages verified\n')
        "
    - name: Install Poetry
      run: pipx install poetry

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'
        
    - name: Install Python dependencies
      run: poetry install --with dev
        
    - name: Run Python tests
      run: poetry run pytest
